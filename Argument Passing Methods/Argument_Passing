Argument passing in Python can be done in three different ways.

---------------------
1. Default Arguments
---------------------
Function definition can take default argument values, if function takes default values then on callig the fuction user does not need to pass value.
Or if the user passes the values to arguments, then values will gets assigned to arguments by its position.

Example 1 

>>> # Default Argument Passing
>>> def add (a = 8, b = 2):
...     sum = a + b
...     return sum
... 
>>> result = add ()
>>> print(result)
10
>>> result = add (2)
>>> print(result)
4
>>> result = add (2,1)
>>> print(result)
3


-----------------------
2. Positional Arguments
-----------------------
Function definition takes arguments by position. If the function definition have 2 args, then on passing the values to function call, it will be 
assigned to function by the position of arguments.

Example 2

>>> # Positional Argument Passing
>>> def add (a,b):
...     sum = a + b
...     return sum
... 
>>> result = add (1,2)
>>> print(result)
3

Error case : Arguments in function definition and function call is not the same, then the following error will show up. 

>>> result = add (1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add() missing 1 required positional argument: 'b'


----------------------
3. Keyword Arguments
----------------------
Function definition will be having arguments by name. 

Example 3

>>> # Keyword Argument Passing
>>> def greet(name, message):
...     print ("Hello", name, message)
... 
>>> greet("Anu","What's up ?")
Hello Anu What's up ?
